import{S as J,r as m,c as y}from"./vendor-194b799d.js";import{a as M}from"./utils-917b1704.js";import{c as q,d as E,s as O}from"./vant-83faff4e.js";const G="/api",l=M.create({baseURL:G,timeout:3e4,headers:{"Content-Type":"application/json"}});l.interceptors.request.use(e=>{var t;return e.showLoading!==!1&&q({message:"请求中...",forbidClick:!0,duration:0}),console.log("API请求:",(t=e.method)==null?void 0:t.toUpperCase(),e.url,e.data),e},e=>(E(),console.error("请求错误:",e),Promise.reject(e)));l.interceptors.response.use(e=>{E();const{data:t}=e;if(console.log("API响应:",e.config.url,t),t.code&&t.code!==200){const o=t.message||"请求失败";return O({type:"fail",message:o}),Promise.reject(new Error(o))}return t},e=>{E(),console.error("响应错误:",e);let t="网络错误，请稍后重试";if(e.response){const{status:o,data:n}=e.response;switch(o){case 400:t=n.message||"请求参数错误";break;case 401:t="未授权，请重新登录";break;case 403:t="没有权限访问";break;case 404:t="请求的资源不存在";break;case 408:t="请求超时";break;case 500:t="服务器内部错误";break;case 503:t="服务暂时不可用";break;default:n&&n.message&&(t=n.message)}}else e.code==="ECONNABORTED"?t="请求超时，请检查网络连接":e.message==="Network Error"&&(t="网络连接异常");return O({type:"fail",message:t}),Promise.reject(e)});const h={async createDownloadTask(e,t=null){return(await l.post("/video/download",{url:e,platform:t})).data},async getTaskStatus(e){return(await l.get(`/video/status/${e}`,{showLoading:!1})).data},async getDownloadUrl(e){return`${l.defaults.baseURL}/video/file/${e}`},async cleanVideo(e){return(await l.delete(`/video/clean/${e}`,{showLoading:!1})).data},async deleteTask(e){return this.cleanVideo(e)},async getSupportedPlatforms(){return(await l.get("/video/platforms")).data},async getTaskList(e={}){return(await l.get("/video/tasks",{params:e})).data},async getStats(){return(await l.get("/video/stats")).data},async cleanExpiredFiles(e=24){return(await l.post("/video/clean/expired",{hours:e})).data},async retryTask(e){return(await l.post(`/video/retry/${e}`)).data},async getVideoPreview(e){return await l.get(`/video/preview/${e}`)},async transcribeVideo(e){return(await l.post(`/video/transcribe/${e}`)).data},async optimizeText(e,t={}){var g;if(!e||typeof e!="string")throw new Error("文案内容不能为空");const o=e.trim();if(o.length===0)throw new Error("文案内容不能为空");const n=1e4;if(o.length>n)throw new Error(`文案长度不能超过${n}字符，当前长度：${o.length}`);const d=t.timeout||12e4,i=1500;if(o.length>i)return await this._optimizeTextInChunks(o,d);try{return(await l.post("/video/optimize-text",{text:o},{timeout:d,showLoading:t.showLoading!==!1})).data}catch(u){throw u.code==="ECONNABORTED"||((g=u.response)==null?void 0:g.status)===408?new Error("AI优化请求超时，建议将长文案分段提交"):u}},async _optimizeTextInChunks(e,t){const n=[],d=e.split(/([。！？\.\!\?]+)/);let i="";for(let c=0;c<d.length;c++){const p=d[c];i.length+p.length<=1500?i+=p:(i.trim()&&n.push(i.trim()),i=p)}if(i.trim()&&n.push(i.trim()),n.length===1&&n[0].length>1500){n.length=0;for(let c=0;c<e.length;c+=1500)n.push(e.slice(c,c+1500))}console.log(`文案分为${n.length}段进行优化`);const g=[],u=[];for(let c=0;c<n.length;c++)try{console.log(`正在优化第${c+1}/${n.length}段...`);const p=await l.post("/video/optimize-text",{text:n[c]},{timeout:t,showLoading:!1});g.push(p.data.optimizedText||n[c]),c<n.length-1&&await new Promise(S=>setTimeout(S,1e3))}catch(p){console.error(`第${c+1}段优化失败:`,p),u.push(`第${c+1}段: ${p.message}`),g.push(n[c])}const k=g.join("");return{originalText:e,optimizedText:k,optimizationTime:new Date().toISOString(),model:"doubao-seed-1-6-250615",chunks:n.length,errors:u.length>0?u:void 0}},async getTranscriptionResult(e){return(await l.get(`/video/transcription/${e}`,{showLoading:!1})).data}};class X{constructor(){this.currentTaskId=null,this.shouldCleanOnUnload=!0,this.setupCleanupListeners()}setCurrentTask(t){this.currentTaskId&&this.currentTaskId!==t&&this.cleanTask(this.currentTaskId),this.currentTaskId=t}async cleanTask(t){if(t)try{await h.cleanVideo(t),console.log(`已清理视频缓存: ${t}`)}catch(o){console.warn(`清理视频缓存失败: ${t}`,o)}}async cleanCurrentTask(){this.currentTaskId&&(await this.cleanTask(this.currentTaskId),this.currentTaskId=null)}setShouldCleanOnUnload(t){this.shouldCleanOnUnload=t}setupCleanupListeners(){window.addEventListener("beforeunload",()=>{if(this.shouldCleanOnUnload&&this.currentTaskId){const t=`${l.defaults.baseURL}/video/clean/${this.currentTaskId}`;navigator.sendBeacon(t,JSON.stringify({method:"DELETE"}))}}),document.addEventListener("visibilitychange",()=>{if(document.visibilityState==="hidden"&&this.shouldCleanOnUnload&&this.currentTaskId){const t=`${l.defaults.baseURL}/video/clean/${this.currentTaskId}`;navigator.sendBeacon(t,JSON.stringify({method:"DELETE"}))}}),window.addEventListener("pagehide",()=>{if(this.shouldCleanOnUnload&&this.currentTaskId){const t=`${l.defaults.baseURL}/video/clean/${this.currentTaskId}`;navigator.sendBeacon(t,JSON.stringify({method:"DELETE"}))}})}}const T=new X,v={get(e,t=null){try{const o=localStorage.getItem(e);return o?JSON.parse(o):t}catch(o){return console.error("读取本地存储失败:",o),t}},set(e,t){try{return localStorage.setItem(e,JSON.stringify(t)),!0}catch(o){return console.error("保存到本地存储失败:",o),!1}},remove(e){try{return localStorage.removeItem(e),!0}catch(t){return console.error("删除本地存储失败:",t),!1}},clear(){try{return localStorage.clear(),!0}catch(e){return console.error("清空本地存储失败:",e),!1}},getSize(){try{let e=0;for(let t in localStorage)localStorage.hasOwnProperty(t)&&(e+=localStorage[t].length+t.length);return e}catch(e){return console.error("计算存储大小失败:",e),0}}},re=J("task",()=>{const e=m(null),t=m([]),o=m(!1),n=m(!1),d=m(null),i=m(null),g=y(()=>{var r;return((r=e.value)==null?void 0:r.progress)||0}),u=y(()=>{var s;const r=(s=e.value)==null?void 0:s.status;return r==="pending"||r==="downloading"}),k=y(()=>{var r;return((r=e.value)==null?void 0:r.status)==="completed"}),c=y(()=>{var r;return((r=e.value)==null?void 0:r.status)==="failed"}),p=y(()=>{var r;return((r=i.value)==null?void 0:r.status)==="processing"}),S=y(()=>{var r;return((r=i.value)==null?void 0:r.status)==="completed"}),D=y(()=>{var r;return((r=i.value)==null?void 0:r.status)==="failed"}),H=async(r,s=null)=>{o.value=!0;try{await b();const a=await h.createDownloadTask(r,s);return e.value={taskId:a.taskId,originalUrl:r,platform:a.platform,status:a.status,progress:0,createTime:a.createTime,isExisting:a.isExisting},T.setCurrentTask(a.taskId),await f(e.value),U(e.value),u.value&&C(a.taskId),a}catch(a){throw console.error("创建任务失败:",a),a}finally{o.value=!1}},I=async r=>{try{const s=await h.getTaskStatus(r);console.log("API返回的任务状态:",s);const a=s.data||s;return console.log("提取的任务数据:",a),console.log("任务进度:",a.progress),e.value&&e.value.taskId===r?(e.value={...e.value,...a,updateTime:new Date().toISOString()},console.log("更新后的任务状态:",e.value),await f(e.value),L(e.value)):e.value||(e.value={...a,updateTime:new Date().toISOString()},console.log("创建的当前任务:",e.value),await f(e.value),U(e.value)),s}catch(s){throw console.error("刷新任务状态失败:",s),s}},N=async()=>{var r;if((r=e.value)!=null&&r.taskId)return await I(e.value.taskId)},P=r=>{e.value&&(e.value={...e.value,...r,updateTime:new Date().toISOString()},f(e.value),L(e.value))},C=r=>{w(),d.value=setInterval(async()=>{try{await I(r),u.value||w()}catch(s){console.error("轮询任务状态失败:",s),w()}},5e3)},w=()=>{d.value&&(clearInterval(d.value),d.value=null)},_=async r=>{n.value=!0;try{const s=await h.getDownloadUrl(r),a=document.createElement("a");return a.href=s,a.download=`video_${r}.mp4`,document.body.appendChild(a),a.click(),document.body.removeChild(a),!0}catch(s){throw console.error("下载视频失败:",s),s}finally{n.value=!1}},z=async r=>{try{i.value={taskId:r,status:"processing",progress:0,createTime:new Date().toISOString()};const s=await h.transcribeVideo(r);return i.value={...i.value,...s,status:"completed"},s}catch(s){throw i.value&&(i.value.status="failed",i.value.errorMessage=s.message),console.error("转换视频为文案失败:",s),s}},A=async r=>{try{const s=await h.getTranscriptionResult(r);return i.value={...i.value,...s.transcription,videoInfo:s.videoInfo},s}catch(s){throw console.error("获取转文案结果失败:",s),s}},R=async(r,s={})=>{try{return await h.optimizeText(r,s)}catch(a){throw console.error("AI优化文案失败:",a),a}},b=async()=>{if(e.value)try{await T.cleanCurrentTask(),console.log("已清理当前任务缓存")}catch(r){console.warn("清理当前任务失败:",r)}},x=async r=>{try{return await h.cleanVideo(r),e.value&&e.value.taskId===r&&(e.value=null,T.setCurrentTask(null),w()),Z(r),await j(r),!0}catch(s){throw console.error("取消任务失败:",s),s}},V=async r=>x(r),F=async r=>{try{const s=await h.retryTask(r);return e.value&&e.value.taskId===r&&(e.value.status="pending",C(r)),s}catch(s){throw console.error("重试任务失败:",s),s}},B=()=>{e.value=null,i.value=null,w(),T.setCurrentTask(null)},$=async()=>{try{const r=v.get("taskHistory",[]);return t.value=r,r}catch(r){return console.error("加载任务历史失败:",r),[]}},K=async()=>{try{return t.value=[],v.remove("taskHistory"),!0}catch(r){throw console.error("清除历史记录失败:",r),r}},U=r=>{const s=t.value.findIndex(a=>a.taskId===r.taskId);s>=0?t.value[s]={...r,updateTime:new Date().toISOString()}:(t.value.unshift({...r,updateTime:new Date().toISOString()}),t.value.length>50&&(t.value=t.value.slice(0,50))),v.set("taskHistory",t.value)},L=r=>{const s=t.value.findIndex(a=>a.taskId===r.taskId);s>=0&&(t.value[s]={...r,updateTime:new Date().toISOString()},v.set("taskHistory",t.value))},Z=r=>{t.value=t.value.filter(s=>s.taskId!==r),v.set("taskHistory",t.value)},f=async r=>{try{v.set(`task_${r.taskId}`,r)}catch(s){console.error("保存任务到本地存储失败:",s)}},j=async r=>{try{v.remove(`task_${r}`)}catch(s){console.error("从本地存储移除任务失败:",s)}};return{currentTask:e,taskHistory:t,isLoading:o,isDownloading:n,transcriptionData:i,currentProgress:g,isProcessing:u,isCompleted:k,isFailed:c,isTranscribing:p,isTranscriptionCompleted:S,isTranscriptionFailed:D,createTask:H,refreshTaskStatus:I,updateTaskStatus:N,updateCurrentTask:P,startPolling:C,stopPolling:w,downloadVideo:_,transcribeVideo:z,getTranscriptionResult:A,optimizeText:R,cancelTask:x,deleteTask:V,retryTask:F,loadTaskHistory:$,clearHistory:K,restoreTaskFromStorage:async r=>{try{const s=v.get(`task_${r}`);return s?(e.value=s,s):null}catch(s){return console.error("从本地存储恢复任务失败:",s),null}},initialize:async()=>{try{await $()}catch(r){console.error("初始化任务存储失败:",r)}},cleanupCurrentTask:b,resetCurrentTask:B}});async function se(e){try{if(navigator.clipboard&&window.isSecureContext)return await navigator.clipboard.writeText(e),!0;const t=document.createElement("textarea");t.value=e,t.style.position="fixed",t.style.opacity="0",t.style.left="-999999px",t.style.top="-999999px",document.body.appendChild(t),t.focus(),t.select();const o=document.execCommand("copy");return document.body.removeChild(t),o}catch(t){return console.error("复制到剪贴板失败:",t),!1}}async function ae(){try{if(navigator.clipboard&&window.isSecureContext)return await navigator.clipboard.readText();throw new Error("无法读取剪贴板：需要安全上下文")}catch(e){return console.error("读取剪贴板失败:",e),""}}export{h as a,se as c,ae as r,re as u,T as v};
//# sourceMappingURL=clipboard-431328c5.js.map
